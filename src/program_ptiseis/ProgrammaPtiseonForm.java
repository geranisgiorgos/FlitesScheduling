/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package program_ptiseis;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import java.util.Vector;
import javax.persistence.Query;
import javax.persistence.TypedQuery;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author antonis
 */
public class ProgrammaPtiseonForm extends JFrame {
    JFrame parent;
    DefaultTableModel tableModel, tableModel1, tableModel2;
    Pilot pic, cop;
    Aeroskafos aero;
    SimpleDateFormat sdf=new SimpleDateFormat("dd/MM/yyyy");
    SimpleDateFormat sdf1=new SimpleDateFormat("HH:mm");
    SimpleDateFormat sdf2=new SimpleDateFormat("yyyy-MM-dd");
    TypedQuery<ProgrammaPtiseon> programQuery;
    ProgrammaPtiseon pp;
    Askisi askisi;
    Random r=new Random();
    /**
     * Creates new form pilotData
     */
    public ProgrammaPtiseonForm(JFrame parent) {
        this.parent=parent;
        initComponents();
        parent.setEnabled(false);
        tableModel = (DefaultTableModel)pilotTable.getModel();
        tableModel1 = (DefaultTableModel)aeroskafosTable.getModel();
        tableModel2 = (DefaultTableModel)apostolesTable.getModel();
        pilotTable.setSelectionMode(NORMAL);
        aeroskafosTable.setSelectionMode(NORMAL);
        pilotList = pilotQuery.getResultList();
        fillTable();
        Date d = new Date();
        Date d1=semesterDate(d);
        
        this.askisiComboBox.setSelectedIndex(-1);

    }

    // Προσθήκη δεδομένων στον πίνακα των πιλότων
    private void fillTable(){
        for(Pilot p:pilotList){
            addPilot(p);
        }
        for(Aeroskafos a:aeroskafosList){
            addAeroskafos(a);
        }
    }
    
    // Προσθήκη γραμμής στον πίνακα
    private void addPilot(Pilot p){
        Vector pilotRow = new Vector();
        pilotRow.add(p.getId());
        pilotRow.add(p.getLastname());
        if(p.getPic()==1)
            pilotRow.add(true);
        else
            pilotRow.add(false);
        if(p.getEm()==1)
            pilotRow.add(true);
        else
            pilotRow.add(false);
        if(p.getEkpaideytis()==1)
            pilotRow.add(true);
        else
            pilotRow.add(false);
        if(p.getDokimastis()==1)
            pilotRow.add(true);
        else
            pilotRow.add(false);
        if(p.getCommander()==1)
            pilotRow.add(true);
        else
            pilotRow.add(false);
        pilotRow.add(p.getHoursexam());
        boolean available=false;
        if(p.getAvailable()==1)
            available=true;
        pilotRow.add(available);        
        tableModel.addRow(pilotRow);
    }
    
     // Προσθήκη γραμμής στον πίνακα
    private void addAeroskafos(Aeroskafos a){
        Vector aeroRow = new Vector();
        aeroRow.add(a.getSn());
        aeroRow.add(a.getHoursA());
        aeroRow.add(a.getHoursB());

        boolean available=false;
        if(a.getAvailable()==1)
            available=true;
        aeroRow.add(available);        
        tableModel1.addRow(aeroRow);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jToggleButton1 = new javax.swing.JToggleButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        ProgrammaPtisewnPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("Program_PtiseisPU").createEntityManager();
        pilotQuery = java.beans.Beans.isDesignTime() ? null : ProgrammaPtisewnPUEntityManager.createQuery("SELECT p FROM Pilot p WHERE p.available=1");
        Program_PtiseisPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("Program_PtiseisPU").createEntityManager();
        aeroskafosQuery = java.beans.Beans.isDesignTime() ? null : Program_PtiseisPUEntityManager.createQuery("SELECT a FROM Aeroskafos a WHERE a.available=1");
        aeroskafosList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : aeroskafosQuery.getResultList();
        askisiQuery = java.beans.Beans.isDesignTime() ? null : Program_PtiseisPUEntityManager.createQuery("SELECT a FROM Askisi a");
        askisiList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : askisiQuery.getResultList();
        askisiQuery1 = java.beans.Beans.isDesignTime() ? null : Program_PtiseisPUEntityManager.createQuery("SELECT a.id FROM Askisi a");
        askisiList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : askisiQuery1.getResultList();
        jButton5 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        pilotTable = new javax.swing.JTable() ;
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        saveButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        aeroskafosTable = new javax.swing.JTable() ;
        picField = new javax.swing.JTextField();
        picButton = new javax.swing.JButton();
        copButton = new javax.swing.JButton();
        copField = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        snField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        callSignField = new javax.swing.JTextField();
        askisiComboBox = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        proorismosField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        pgField = new javax.swing.JTextField();
        dateField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        agField = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        apostolesTable = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        askiseisButton = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 51, 102));

        jButton5.setText("ΈΞΟΔΟΣ");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        pilotTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Επώνυμο", "PiC", "Έμπειρος", "Εκπαιδευτής", "Δοκιμαστής", "Αρχ. Σχημ.", "Ώρες Εξαμ."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(pilotTable);

        jLabel7.setText(">> Αρχείο");

        jLabel6.setText("Αρχείο >> Δεδομένα ");

        saveButton1.setText("Αποθήκευση");
        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel8.setText("Πιλότοι");

        jLabel9.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N
        jLabel9.setText("Αεροσκάφη");

        aeroskafosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SN", "Ώρες Α", "Ώρες Β"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(aeroskafosTable);

        picField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picFieldActionPerformed(evt);
            }
        });

        picButton.setText("PiC >");
        picButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                picButtonActionPerformed(evt);
            }
        });

        copButton.setText("CoP >");
        copButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copButtonActionPerformed(evt);
            }
        });

        copField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copFieldActionPerformed(evt);
            }
        });

        jButton3.setText("SN >");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        snField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                snFieldActionPerformed(evt);
            }
        });

        jButton1.setText("X");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("X");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton4.setText("X");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setText("CallSign:");

        org.jdesktop.swingbinding.JComboBoxBinding jComboBoxBinding = org.jdesktop.swingbinding.SwingBindings.createJComboBoxBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, askisiList1, askisiComboBox);
        bindingGroup.addBinding(jComboBoxBinding);

        askisiComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                askisiComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Άσκηση:");

        jLabel3.setText("Α/Γ:");

        jLabel4.setText("Π/Γ:");

        dateField.setBackground(new java.awt.Color(121, 225, 212));
        dateField.setFont(new java.awt.Font("Noto Sans", 1, 14)); // NOI18N

        jLabel5.setText("Ημέρα:");

        jLabel10.setText("Αποστολή:");

        jButton6.setText("Προβολή");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Noto Sans", 1, 13)); // NOI18N
        jLabel11.setText("Νέα Αποστολή");

        apostolesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Κυβέρνητης", "Συγκυβερνήτης", "CallSign", "S/N", "Άσκηση", "Α/Γ", "Π/Γ", "Αποστολή"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(apostolesTable);

        jLabel12.setFont(new java.awt.Font("Noto Sans", 1, 13)); // NOI18N
        jLabel12.setText("Πρόγραμμα Πτήσεων");

        askiseisButton.setText("Ασκήσεις");
        askiseisButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                askiseisButtonActionPerformed(evt);
            }
        });

        jButton7.setText("AutoFill");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("X");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 27, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(155, 155, 155)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(askiseisButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(143, 143, 143)
                                        .addComponent(jLabel9))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 544, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 20, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(141, 141, 141))
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(157, 157, 157)))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(proorismosField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(15, 15, 15)
                                                        .addComponent(snField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(agField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jButton4))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel11)
                                                .addGap(86, 86, 86))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(picButton, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(copButton, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(picField)
                                                    .addComponent(copField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jButton1)
                                                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(askisiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1)
                                            .addGap(18, 18, 18)
                                            .addComponent(callSignField, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(pgField, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jButton8)
                                        .addGap(20, 20, 20)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(saveButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 812, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(32, 32, 32))
            .addGroup(layout.createSequentialGroup()
                .addGap(197, 197, 197)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel12))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(dateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton6))
                .addGap(10, 10, 10)
                .addComponent(jLabel12)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(askisiComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(jButton7)
                            .addComponent(jButton8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(picButton)
                                    .addComponent(picField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(saveButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(copButton)
                            .addComponent(copField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(snField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(proorismosField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel1)
                            .addComponent(callSignField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(agField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(pgField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(askiseisButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        dispose();
        parent.setEnabled(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        String dateStr = dateField.getText();
        String callSign, agStr, pgStr, proorismos;
        Date date, time1, time2;
        if(dateStr.length()==0){
            JOptionPane.showMessageDialog(this, "H ημερομηνία δεν μπορεί να είναι κενή");
            return;
        }
        try {
            date = sdf.parse(dateStr);
            callSign = callSignField.getText();
            // Ώρα απογείωσης και προσγείωσης
            agStr = agField.getText();
            pgStr = pgField.getText();
            time1 = sdf1.parse(agStr);
            time2 = sdf1.parse(pgStr);            
            proorismos = proorismosField.getText();
            if(callSign.length()==0 || agStr.length()==0 || pgStr.length()==0 || proorismos.length()==0){
                JOptionPane.showMessageDialog(this, "Ελλειπή υποχρεωτικά στοιχεία");
                return;
            }
            programQuery= DBManager.em.createNamedQuery("ProgrammaPtiseon.findByDate", ProgrammaPtiseon.class);
            programQuery.setParameter("date", date);
            List<ProgrammaPtiseon> results = programQuery.getResultList();
            if(results.size()==0){
                pp = new ProgrammaPtiseon(1, date);
                DBManager.saveObject(pp);
            } else {
                pp=results.get(0);
            }
            Apostoli ap = new Apostoli(1,callSign);
            int askisiPosition = askisiComboBox.getSelectedIndex();
            String askisiId = String.valueOf(this.askisiList1.get(askisiPosition));
            
            TypedQuery<Askisi> q1 = ProgrammaPtisewnPUEntityManager.createNamedQuery("Askisi.findById", Askisi.class);
            q1.setParameter("id", askisiId);
            List<Askisi> askiseis = q1.getResultList();
            askisi = askiseis.get(0);
            ap.setAskisiid(askisi);
            ap.setPic(pic);
            ap.setCop(cop);
            ap.setAeroskafossn(aero);
            ap.setProgrammaPtiseonid(pp);
            ap.setProorismos(proorismos);
            ap.setTakeoff(time1);
            ap.setLanding(time2);
            ApostoliReal ar = new ApostoliReal(Math.abs(r.nextInt()%100000), pp.getId(), pic.getId(), cop.getId(), aero.getSn());
            ap.setApostoliRealid(ar);
            ar.setApostoliId(ap.getId());
            ar.setCompleted((short)0);
            DBManager.saveObject(ar);
            DBManager.saveObject(ap);
            // Δημιουργία βιβλίου πτήσεων
            BiblioPtiseon bp = new BiblioPtiseon(Math.abs(r.nextInt()%100000));
            bp.setDate(date);
            DBManager.saveObject(bp);
            ar.setBiblioPtiseonid(bp.getId());
            ar.setApostoliId(ap.getId());
            ar.setProorismos(proorismos);
            ar.setTakeoff(time1);
            ar.setLanding(time2);
            DBManager.modifyObject(ar);
            clearForm();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "H ημερομηνία πρέπει να έχει τη μορφή dd/mm/yyyy");
        }
    }//GEN-LAST:event_saveButton1ActionPerformed

    private void clearForm(){
        this.snField.setText("");
        this.callSignField.setText("");
        this.picField.setText("");
        this.copField.setText("");
        this.proorismosField.setText("");
        this.agField.setText("");
        this.pgField.setText("");
    }
    
    private void picFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_picFieldActionPerformed

    private void copFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_copFieldActionPerformed

    private void snFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_snFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_snFieldActionPerformed

    private void picButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_picButtonActionPerformed
        int row=this.pilotTable.getSelectedRow();
        if(row==-1)
            JOptionPane.showMessageDialog(this, "Επιλέξτε πρώτα πιλότο");
        else {
            pic = pilotList.get(row);
            if(pic.getPic()==0){
                JOptionPane.showMessageDialog(this, "Ο ιπτάμενος δεν είναι PiC");
                pic=null;
            // Έλεγχος αν έχει επιλεγεί ήδη ο πιλότος
            }else if(cop!=null && pic.getId() == cop.getId()){
                JOptionPane.showMessageDialog(this, "O πιλότος είναι ήδη επιλεγμένος");
                pic=null;
            }else {
                picField.setText(pic.getId()+" "+pic.getLastname()+" "+pic.getFirstname());
            }
        }
    }//GEN-LAST:event_picButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        picField.setText("");
        pic=null;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        copField.setText("");
        cop=null;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        snField.setText("");
        aero=null;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void copButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copButtonActionPerformed
        int row=this.pilotTable.getSelectedRow();
        if(row==-1)
            JOptionPane.showMessageDialog(this, "Επιλέξτε πρώτα πιλότο");
        else {
            cop = pilotList.get(row);
            // Έλεγχος αν έχει επιλεγεί ήδη ο πιλότος
            if(pic!=null && pic.getId() == cop.getId()){
                JOptionPane.showMessageDialog(this, "O πιλότος είναι ήδη επιλεγμένος");
                cop=null;
            }else {
                copField.setText(cop.getId()+" "+cop.getLastname()+" "+cop.getFirstname());
            }
        }
    }//GEN-LAST:event_copButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int row=this.aeroskafosTable.getSelectedRow();
        if(row==-1)
            JOptionPane.showMessageDialog(this, "Επιλέξτε πρώτα αεροσκάφος");
        else {
            aero =  aeroskafosList.get(row);
            snField.setText(aero.getSn()+"");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void askisiComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_askisiComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_askisiComboBoxActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String dateStr = dateField.getText();       
        Date date;
        if(dateStr.length()==0){
            JOptionPane.showMessageDialog(this, "H ημερομηνία δεν μπορεί να είναι κενή");
            return;
        }
        try {
            date = sdf.parse(dateStr);
            programQuery= DBManager.em.createNamedQuery("ProgrammaPtiseon.findByDate", ProgrammaPtiseon.class);
            programQuery.setParameter("date", date);
            List<ProgrammaPtiseon> results = programQuery.getResultList();
            // Καθαρίζουμε τον πίνακα με τις αποστολές
            int rows = tableModel2.getRowCount();
            for(int i=0;i<rows;i++)
                tableModel2.removeRow(0);
            if(results.size()>0){
                ProgrammaPtiseon pp1 = results.get(0);
                int ppId = pp1.getId();
                TypedQuery<Apostoli> query1 = ProgrammaPtisewnPUEntityManager.createNamedQuery("Apostoli.findAll", Apostoli.class);
                List<Apostoli> apostoles = query1.getResultList();
                
                for(Apostoli apostoli:apostoles){
                    if(apostoli.getProgrammaPtiseonid().getId() == ppId)
                        addApostoli(apostoli);
                    
                }
            } else {
                JOptionPane.showMessageDialog(this, "Δεν υπάρχουν αποστολές για την ημερομηνία:"+sdf.format(date));
            }
           
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "H ημερομηνία πρέπει να έχει τη μορφή dd/mm/yyyy");
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void askiseisButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_askiseisButtonActionPerformed
        int row=this.pilotTable.getSelectedRow();
        ArrayList<ApostoliPerPilot> apostoles = new ArrayList();
        if(row==-1)
            JOptionPane.showMessageDialog(this, "Επιλέξτε πρώτα πιλότο");
        else {
            // Ερώτημα SQL
            //SELECT AskisiId, COUNT(*), MAX(Date) FROM Apostoli, Apostoli_Real, Biblio_Ptiseon WHERE Apostoli_Real.BIBLIO_PTISEONID = Biblio_Ptiseon.ID 
            // AND Apostoli_Real.ApostoliId = Apostoli.id AND (Apostoli_Real.cop=? OR Apostoli_Real.pic=?) GROUP BY AskisiId
            Pilot p=this.pilotList.get(row);
            // Εύρεση εξαμήνου
            Date d1 = semesterDate(new Date());
            
            // Ερώτημα SQL για τον υπολογισμό των αποστολών των πιλότων ανά άσκηση
            String queryStr = "SELECT AskisiId, COUNT(*), MAX(Date) FROM Apostoli, Apostoli_Real, Biblio_Ptiseon ";
            queryStr += "WHERE Apostoli_Real.BIBLIO_PTISEONID = Biblio_Ptiseon.ID ";
            queryStr += " AND Biblio_Ptiseon.Date >= \'"+sdf2.format(d1)+"\'";
            queryStr += " AND Apostoli_Real.ApostoliId = Apostoli.id ";
            queryStr += " AND (Apostoli_Real.cop="+p.getId()+" OR Apostoli_Real.pic=";
            queryStr += p.getId()+") GROUP BY AskisiId";
            Query q1 = DBManager.em.createNativeQuery(queryStr);
            List<Object []> results = q1.getResultList();
            Date today = new Date();
            long t1 = today.getTime();
            String name = p.getLastname()+" "+p.getFirstname();
            
            for(int i=0;i<results.size();i++){
                Date d = (Date)results.get(i)[2];
                long t2 = d.getTime();
                long dayDiff = (t1-t2)/1000 / 3600 / 24;
                ApostoliPerPilot app = new ApostoliPerPilot(name, (String)results.get(i)[0], (int)results.get(i)[1], (int)dayDiff );
                apostoles.add(app);
            }
            ApostoliPerPilotDialog appd = new ApostoliPerPilotDialog(this, true, apostoles, name);
            appd.setTitle("Αποστολές πιλότου");
            appd.setLocation(100,100);
            appd.pack();
            appd.setVisible(true);
            //JOptionPane.showMessageDialog(this, msg);
        }
    }//GEN-LAST:event_askiseisButtonActionPerformed
    // Μέθοδος που υπολογίζει την πρώτη μέρα του εξαμήνου για μία ημερομηνία
    private Date semesterDate(Date date){
        Date d;
        Calendar cal = Calendar.getInstance();
        cal.setTime(date);
        cal.set(Calendar.DAY_OF_MONTH, 1);

        if(cal.get(Calendar.MONTH)<6)
            cal.set(Calendar.MONTH, 0);
        else
            cal.set(Calendar.MONTH, 6);
        d = cal.getTime();
        return d;
        
    }
    
    
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        if(picField.getText().length()==0){
            String queryStr = "SELECT  ID FROM PILOT WHERE AVAILABLE = 1 AND PIC=1 AND HOURSEXAM = (SELECT MIN(HOURSEXAM) FROM PILOT WHERE AVAILABLE = 1 AND PIC=1) ORDER BY ID ASC";
            Query q1 = DBManager.em.createNativeQuery(queryStr);
            List<Integer> results = q1.getResultList();
            int picId = (int)results.get(0);
            
            TypedQuery<Pilot> q2 = ProgrammaPtisewnPUEntityManager.createNamedQuery("Pilot.findById", Pilot.class);
            q2.setParameter("id", picId);
            List<Pilot> pilots = q2.getResultList();
            pic = pilots.get(0);
            picField.setText(pic.getId()+" "+pic.getLastname()+" "+pic.getFirstname());
            // Αν επιλεγεί ο πιλότος παύει να είναι διαθέσιμος
            pic.setAvailable((short)0);
        }
        if(copField.getText().length()==0){
            int id=pic.getId();
            String queryStr = "SELECT  ID FROM PILOT WHERE AVAILABLE = 1 AND ";
            queryStr += "NOT (ID ="+id+")"; 
            queryStr += " AND HOURSEXAM = (SELECT MIN(HOURSEXAM) FROM PILOT WHERE AVAILABLE = 1 AND ";
            queryStr += "NOT (ID ="+id+")";
            queryStr += ") ORDER BY ID ASC";
            Query q3 = DBManager.em.createNativeQuery(queryStr);
            List<Integer> results = q3.getResultList();
            int copId = (int)results.get(0);
            
            TypedQuery<Pilot> q4 = ProgrammaPtisewnPUEntityManager.createNamedQuery("Pilot.findById", Pilot.class);
            q4.setParameter("id", copId);
            List<Pilot> pilots = q4.getResultList();
            cop = pilots.get(0);
            copField.setText(cop.getId()+" "+cop.getLastname()+" "+cop.getFirstname());
            // Αν επιλεγεί ο πιλότος παύει να είναι διαθέσιμος
            pic.setAvailable((short)0);
        }
        if(snField.getText().length()==0){
            // Βρίσκουμε το αεροπλάνο με τις λιγότερες ώρες Α
            String queryStr1 = "SELECT  SN, HOURS_A FROM AEROSKAFOS WHERE AVAILABLE = 1 AND HOURS_A = (SELECT MIN(HOURS_A) FROM AEROSKAFOS WHERE AVAILABLE = 1 ) ORDER BY SN ASC";
            Query q5 = DBManager.em.createNativeQuery(queryStr1);
            List<Object []> results1 = q5.getResultList();
            String sn1 = (String)results1.get(0)[0];
            float hours1 =  (Float)results1.get(0)[1];
            
            // Βρίσκουμε το αεροπλάνο με τις δεύτερες λιγότερες ώρες Α
            String queryStr2 = "SELECT  SN, HOURS_A FROM AEROSKAFOS WHERE AVAILABLE = 1 AND NOT (SN = \'"+sn1;
            queryStr2 += "\') AND HOURS_A = (SELECT MIN(HOURS_A) FROM AEROSKAFOS WHERE AVAILABLE = 1 AND NOT (SN=\'"+sn1;
            queryStr2 += "\')) ORDER BY SN ASC";
            Query q6 = DBManager.em.createNativeQuery(queryStr2);
            List<Object []> results2 = q6.getResultList();
            String sn2 = (String)results2.get(0)[0];
            float hours2 =  (Float)results2.get(0)[1];
            float diff = (hours2-hours1)/hours1;
            // SN του επιλεγμένου αεροσκάφους
            String sn;
            if(diff<=0.2){
                sn=sn1;
            } else {
                String queryStr3 = "SELECT  SN FROM AEROSKAFOS WHERE AVAILABLE = 1 AND HOURS_B = (SELECT MIN(HOURS_B) FROM AEROSKAFOS WHERE AVAILABLE = 1 ) ORDER BY SN ASC";
                Query q7 = DBManager.em.createNativeQuery(queryStr3);
                List results3 = q7.getResultList();
                sn = (String)results3.get(0);
            }
            TypedQuery<Aeroskafos> q8 = ProgrammaPtisewnPUEntityManager.createNamedQuery("Aeroskafos.findBySn", Aeroskafos.class);
            q8.setParameter("sn", sn);
            List<Aeroskafos> aeros = q8.getResultList();
            aero = aeros.get(0);
            snField.setText(aero.getSn());
        }
        String askisiId2, askisiId;
        Date today = new Date();
        long t1 = today.getTime();
        // Αν δεν έχει επιλεγεί η άσκηση τότε την επιλέγουμε αυτόματα
        if(askisiComboBox.getSelectedIndex()==-1){
            // Εύρεση εξαμήνου
            Date d1 = semesterDate(new Date());
            // Ερώτημα για να βρούμε τις ασκήσεις που δεν συμμετείχει ο PIC
            String queryStr1 = "SELECT AskisiId FROM Apostoli ";
            queryStr1 += "WHERE AskisiId NOT IN (SELECT AskisiId FROM Apostoli, Apostoli_Real, Biblio_Ptiseon WHERE "; 
            queryStr1 += " Biblio_Ptiseon.Date >= \'"+sdf2.format(d1)+"\'";
            queryStr1 += " AND Apostoli_Real.ApostoliId = Apostoli.id ";
            queryStr1 += " AND (Apostoli_Real.cop="+pic.getId()+" OR Apostoli_Real.pic=";
            queryStr1 += pic.getId()+"))";
            Query q1 = DBManager.em.createNativeQuery(queryStr1);
            List results1 = q1.getResultList();
            if (results1.size()!=0){
                // Αν υπάρχει άσκηση που δεν συμμετείχε ο PIC επιλέγεται αυτή
                askisiId=(String)results1.get(0);

            } else {
                // Αν δεν υπάρχει τέτοια άσκηση τότε ελέγχεται ο COP
                // Ερώτημα για να βρούμε τις ασκήσεις που δεν συμμετείχει ο COP
                String queryStr3 = "SELECT AskisiId FROM Apostoli ";
                queryStr3 += "WHERE AskisiId NOT IN (SELECT AskisiId FROM Apostoli, Apostoli_Real, Biblio_Ptiseon WHERE "; 
                queryStr3 += " Biblio_Ptiseon.Date >= \'"+sdf2.format(d1)+"\'";
                queryStr3 += " AND Apostoli_Real.ApostoliId = Apostoli.id ";
                queryStr3 += " AND (Apostoli_Real.cop="+cop.getId()+" OR Apostoli_Real.pic=";
                queryStr3 += cop.getId()+"))";
                Query q3 = DBManager.em.createNativeQuery(queryStr3);
                List results3 = q3.getResultList();
                if (results1.size()!=0){
                // Αν υπάρχει άσκηση που δεν συμμετείχε ο COP επιλέγεται αυτή
                askisiId=(String)results1.get(0);

            } else {
                    // Για τον pic υπολογίζουμε την άσκηση που έχει περισσότερο καιρό να συμμετάσχει
                    String queryStr2 = "SELECT AskisiId, COUNT(*), MAX(Date) FROM Apostoli, Apostoli_Real, Biblio_Ptiseon ";
                    queryStr2 += "WHERE Apostoli_Real.BIBLIO_PTISEONID = Biblio_Ptiseon.ID ";
                    queryStr2 += " AND Biblio_Ptiseon.Date >= \'"+sdf2.format(d1)+"\'";
                    queryStr2 += " AND Apostoli_Real.ApostoliId = Apostoli.id ";
                    queryStr2 += " AND (Apostoli_Real.cop="+pic.getId()+" OR Apostoli_Real.pic=";
                    queryStr2 += pic.getId()+") GROUP BY AskisiId";
                    Query q2 = DBManager.em.createNativeQuery(queryStr2);
                    List<Object []> results2 = q2.getResultList();

                    long maxDiff1=0;
                    int maxPos1=-1;
                    for(int i=0;i<results2.size();i++){
                        Date d = (Date)results2.get(i)[2];
                        long t2 = d.getTime();
                        long dayDiff = (t1-t2)/1000 / 3600 / 24;
                        // Εύρεση μέγιστου χρόνου
                        if(dayDiff > maxDiff1){
                            maxDiff1=dayDiff;
                            maxPos1=i;
                        }
                    }
                    // Για τον cop υπολογίζουμε την άσκηση που έχει περισσότερο καιρό να συμμετάσχει
                    String queryStr4 = "SELECT AskisiId, COUNT(*), MAX(Date) FROM Apostoli, Apostoli_Real, Biblio_Ptiseon ";
                    queryStr4 += "WHERE Apostoli_Real.BIBLIO_PTISEONID = Biblio_Ptiseon.ID ";
                    queryStr4 += " AND Biblio_Ptiseon.Date >= \'"+sdf2.format(d1)+"\'";
                    queryStr4 += " AND Apostoli_Real.ApostoliId = Apostoli.id ";
                    queryStr4 += " AND (Apostoli_Real.cop="+cop.getId()+" OR Apostoli_Real.pic=";
                    queryStr4 += cop.getId()+") GROUP BY AskisiId";
                    Query q4 = DBManager.em.createNativeQuery(queryStr4);
                    List<Object []> results4 = q4.getResultList();


                    long maxDiff2=0;
                    int maxPos2 = -1;
                    for(int i=0;i<results4.size();i++){
                        Date d = (Date)results4.get(i)[2];
                        long t2 = d.getTime();
                        long dayDiff = (t1-t2)/1000 / 3600 / 24;
                        // Εύρεση μέγιστου χρόνου
                        if(dayDiff > maxDiff2){
                            maxDiff2=dayDiff;
                            maxPos2=i;
                        }
                    }
                    if(maxDiff1 >= maxDiff2)
                        askisiId = (String)results2.get(maxPos1)[0];
                    else
                        askisiId = (String)results4.get(maxPos1)[0];
                }
            }
            for(int i=0;i<askisiComboBox.getItemCount();i++)
                
                if(askisiComboBox.getItemAt(i).equals(askisiId))
                    askisiComboBox.setSelectedIndex(i);
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        askisiComboBox.setSelectedIndex(-1);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void addApostoli(Apostoli apostoli){
        Vector apostoliRow = new Vector();
        apostoliRow.add(apostoli.getPic().getLastname());
        apostoliRow.add(apostoli.getCop().getLastname());
        apostoliRow.add(apostoli.getCallsign());
        apostoliRow.add(apostoli.getAeroskafossn().getSn());
        apostoliRow.add(apostoli.getAskisiid().getId());
        apostoliRow.add(sdf1.format(apostoli.getTakeoff()));
        apostoliRow.add(sdf1.format(apostoli.getLanding()));
        apostoliRow.add(apostoli.getProorismos());
        tableModel2.addRow(apostoliRow);
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager Program_PtiseisPUEntityManager;
    private javax.persistence.EntityManager ProgrammaPtisewnPUEntityManager;
    private java.util.List<program_ptiseis.Aeroskafos> aeroskafosList;
    private javax.persistence.Query aeroskafosQuery;
    private javax.swing.JTable aeroskafosTable;
    private javax.swing.JTextField agField;
    private javax.swing.JTable apostolesTable;
    private javax.swing.JButton askiseisButton;
    private javax.swing.JComboBox<String> askisiComboBox;
    private java.util.List<program_ptiseis.Askisi> askisiList;
    private java.util.List<program_ptiseis.Askisi> askisiList1;
    private javax.persistence.Query askisiQuery;
    private javax.persistence.Query askisiQuery1;
    private javax.swing.JTextField callSignField;
    private javax.swing.JButton copButton;
    private javax.swing.JTextField copField;
    private javax.swing.JTextField dateField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField pgField;
    private javax.swing.JButton picButton;
    private javax.swing.JTextField picField;
    private javax.persistence.Query pilotQuery;
    private javax.swing.JTable pilotTable;
    private javax.swing.JTextField proorismosField;
    private javax.swing.JButton saveButton1;
    private javax.swing.JTextField snField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
    List<Pilot> pilotList=new ArrayList();
}
